@page "/doctor"
@using Clinic.BlazorWebPWA.Extensions
@using Clinic.BlazorWebPWA.Services.IService
@using Clinic.DTO.Models.Dto
@using Newtonsoft.Json
@inject HttpClient Http
@inject IClinicService clinicService
<PageTitle>Bác sĩ</PageTitle>
<head>
    <link href="css/doctor.css" rel="stylesheet" />
</head>

<body >
    <main class="flex-shrink-0">
        <div class="bg-primary">
            <header class="bg-primary py-4 inner-header">
                <div class="container py-3 px-5">
                    <div class="row gx-5 align-items-center justify-content-center">
                        <div class="col-lg-12">
                            <div class="text-center">
                                <h1 class="fw-bold text-white text-uppercase">Các bác sĩ chuyên nghiệp của chúng tôi</h1>
                            </div>
                        </div>
                    </div>
                </div>
            </header>
        </div>

        <!-- Filter bar-->
        <section class="py-3">
            <div class="container px-5">
                <div class="row gx-3 align-items-center">
                    <!-- Part 1: Filter Bar -->
                    <div class="col-lg-9">
                        <div class="row">
                            <div class="col-md-1 d-flex justify-content-center">
                                <h6 class="my-auto">Bộ lọc:</h6>
                            </div>
                            <div class="col-md-5">
                                <select class="form-select" id="specializationFilter">
                                    <option selected>Chuyên khoa</option>
                                    <option value="1">Chuyên khoa 1</option>
                                    <option value="2">Chuyên khoa 2</option>
                                </select>
                            </div>
                            <div class="col-md-3">
                                <select class="form-select" id="academicRankFilter">
                                    <option selected>Học vị</option>
                                    <option value="1">Học vị 1</option>
                                    <option value="2">Học vị 2</option>
                                </select>
                            </div>
                            <div class="col-md-3">
                                <select class="form-select" id="genderFilter">
                                    <option selected>Giới tính</option>
                                    <option value="male">Nam</option>
                                    <option value="female">Nữ</option>
                                </select>
                            </div>
                        </div>
                    </div>

                    <!-- Part 2: Search Bar -->
                    <div class="col-lg-3">
                        <div class="input-group">
                            <input type="text" class="form-control" placeholder="Tìm kiếm bác sĩ" aria-label="Doctor's name" aria-describedby="searchButton">
                            <button class="btn btn-outline-secondary" type="button" id="searchButton">
                                <i class="bi bi-search"></i> <!-- Bootstrap icon for search -->
                            </button>
                        </div>
                    </div>
                </div>
            </div>
        </section>

        <div class="col-lg-12 bg-warning">
            <div class="container px-5">
                <div class="row py-2 align-items-center justify-content-center">
                    <h5 class="my-auto">Phòng khám số 201</h5>
                </div>
            </div>
        </div>

        <!-- Page Content-->
        <section class="py-3">
            <div class="container px-5 mt-3">
                <div class="row gx-5">
                    @foreach (var doctor in doctors)
                    {
                        <div class="col-md-6 col-lg-4">
                        <div class="card mb-5">
                            <div class="bg-white shadow-sm border">
                                <div class="mx-auto"><img class="img-fluid card-img-top" src="@doctor.ImageUrl" alt="..."></div>
                                <div class="card-body align-items-center">
                                    <div class="text-center mb-2">
                                        <h5 class="fw-bold card-title">@doctor.Name </h5>
                                        <p class="card-subtitle mb-0 text-muted">@doctor.Specialization.ConvertSpecEnum()</p>
                                    </div>
                                        <div class="card-text px-3">
                                            <p class="text-muted fw-light mb-2" style="overflow: hidden; display: -webkit-box; -webkit-box-orient: vertical; -webkit-line-clamp: 3;">@doctor.Introduction</p>
                                    </div>
                                    <div class="d-flex px-3 justify-content-between">
                                        <p class="fw-bold my-auto fs-6"> Đánh giá: </p>
                                        <div class="stars gap-sm-2 fs-5">
                                        @for (int i = 0; i < doctor.AverageRating; i++)
                                        {
                                            <i class="bi bi-star-fill" style="color: rgb(255, 210, 48);"></i>
                                        }
                                        </div>
                                        <p class="fw-bold my-auto fs-6">@doctor.AverageRating </p>
                                    </div>
                                    <div class="d-flex justify-content-between card-body">
                                        <div><a href="#" class="text-primary fs-4 card-link"><i class="bi bi-chat-dots-fill"></i></a></div>
                                        <a href="/" class="btn btn-navy card-link">Chi tiết</a>
                                        <a href="doctor/book-appointments/@doctor.Id" class="btn btn-navy card-link">Đặt lịch khám</a>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                    }
                </div>
            </div>
        </section>
        <section class="p-3 d-flex justify-content-center">
            <nav aria-label="Page navigation example">
                <ul class="pagination mb-0">
                    <li class="page-item">
                        <a class="page-link" href="#" aria-label="Previous">
                            <span aria-hidden="true">«</span>
                        </a>
                    </li>
                    <li class="page-item"><a class="page-link" href="#">1</a></li>
                    <li class="page-item"><a class="page-link" href="#">2</a></li>
                    <li class="page-item"><a class="page-link" href="#">3</a></li>
                    <li class="page-item">
                        <a class="page-link" href="#" aria-label="Next">
                            <span aria-hidden="true">»</span>
                        </a>
                    </li>
                </ul>
            </nav>
        </section>
    </main>
</body>


<script>
    document.querySelectorAll(".stars").forEach((starsContainer) => {
        const stars = starsContainer.querySelectorAll(".bi-star-fill");

        stars.forEach((star, index1) => {
            star.addEventListener("click", () => {
                stars.forEach((otherStar, index2) => {
                    index1 >= index2
                        ? otherStar.classList.add("active")
                        : otherStar.classList.remove("active");
                });

                // Update the rating display based on the clicked star
                const ratingDisplay = starsContainer.nextElementSibling.querySelector(".fw-bold.my-auto.fs-6");
                ratingDisplay.textContent = `${index1 + 1}/5`;
            });
        });
    });


</script>
@code
{
    List<DoctorListViewModel> doctors = new();
    protected override async Task OnInitializedAsync()
    {
        var response = await clinicService.GetDoctorsAsync<ResponseDto>();
        if (response != null && response.IsSuccess)
        {
            doctors = JsonConvert.DeserializeObject<List<DoctorListViewModel>>(Convert.ToString((response.Result)));
        }
    }
}
