@page "/doctor/doctor-detail/book-appointments/confirm/invoice/{bookingId}"
@page "/doctor/book-appointments/confirm/invoice"
@using Microsoft.AspNetCore.Components.WebAssembly.Authentication
@using Clinic.BlazorWebPWA.Services.IService
@using Microsoft.AspNetCore.Components
@using Microsoft.AspNetCore.Components.Web
@inject NavigationManager nav
@inject IClinicService clinicService

<PageTitle>Invoice Detail</PageTitle>

<main>
    <div class="bg-white">
        <div class="container px-5 py-5 appointments">
            <div>
                <h2 class="m-auto fw-bold text-center text-black mb-2 mx-auto p-2">INVOICE DETAILS</h2>
                <div class="m-auto bg-primary shadow-lg px-5 pt-3 rounded-3 col-lg-8 mx-auto">
                    <form action="/" class="text-start pt-4">
                        <h4 class="m-auto text-center text-white mb-2 mx-auto">Medcial Report</h4>
                        <h5 class="m-auto text-center text-white mb-5 mx-auto">Clinic: 4Health Clinic</h5>
                        <div class="mb-3">
                            <label for="fullname" class="form-label medium text-white">Full Name</label>
                            <input type="text" class="form-control" placeholder="@ViewModel?.BriefViewModel?.UserName" pattern="[^\s]+" size=20 readonly="False">
                        </div>
                        <div class="mb-3">
                            <label class="form-label medium text-white">Phone Number</label>
                            <input type="tel" class="form-control" placeholder="@ViewModel?.BriefViewModel?.PhoneNumber" readonly="False">
                        </div>
                        <div class="mb-3">
                            <label for="date" class="form-label medium text-white">Date and time you want to be examined<small class="text-danger fw-bold"></small></label>
                            <input type="text" class="form-control" placeholder="@ViewModel?.BriefViewModel?.OrderPlacedTime" id="datetime" required>
                        </div>
                        <div class="mb-3">
                            <label for="price" class="form-label medium text-white">Total</label>
                            <input type="number" class="form-control" placeholder="@ViewModel?.Products.Sum(x => x.Price)" readonly="False">
                        </div>
 
                    </form>
                </div>
            </div>
        </div>
    </div>
</main>
@code{
    @code {
        [Parameter] public string bookingId { get; set; }
        [Inject] IAccessTokenProvider TokenProvider { get; set; }
        [CascadingParameter] private Task<AuthenticationState> authenticationStateTask { get; set; }
        public InvoiceDetailsViewModel ViewModel { get; set; }
        private string accessToken { get; set; }
        public bool Notification { get; set; }
        protected async override Task OnInitializedAsync()
        {
            base.OnInitialized();

            var authState = await authenticationStateTask;
            var user = authState.User;
            if (!user.Identity.IsAuthenticated)
            {
                nav.NavigateTo("authentication/login");
            }

            var accessTokenResult = await TokenProvider.RequestAccessToken();
            accessToken = string.Empty;

            if (accessTokenResult.TryGetToken(out var token))
            {
                accessToken = token.Value;
            }

            var response = await clinicService.GetInvoice<ResponseDto>(bookingId, accessToken);
            if (response != null && response.IsSuccess)
            {
                ViewModel = JsonConvert.DeserializeObject<InvoiceDetailsViewModel>(Convert.ToString((response.Result)));
                StateHasChanged();
            }
        }
    }
}