@page "/list-doctor"
@using Clinic.BlazorWebPWA.Extensions
@layout AdminLayout
@inject IClinicService clinicService
@inject IDoctorService doctorService
@inject NavigationManager nav
@inject DialogService DialogService
@inject NotificationService NotificationService
<link href="css/admin.css" rel="stylesheet" />

<PageTitle>List Doctors</PageTitle>
<div class="page-wrapper">
    <div class="content">
        <div class="row">
            <div class="col-sm-12">
                <div class="card card-table show-entire">
                    <div class="card-body">

                        <div class="page-table-header mb-2">
                            <div class="row align-items-center">
                                <div class="col">
                                    <div class="doctor-table-blk">
                                        <h3>Doctors List</h3>
                                        <div class="doctor-search-blk">
                                            <div class="top-nav-search table-search-blk">
                                                <input type="text" value="@doctorName" @onchange="HandleChange" class="form-control" placeholder="Search here">
                                            </div>
                                            <div class="add-group">
                                                <RadzenButton Click=@(_ => nav.NavigateTo($"upsert-doctor", true)) Style="margin-left: 20px" Icon="add_circle_outline" ButtonStyle="ButtonStyle.Secondary" />
                                            </div>
                                        </div>
                                    </div>
                                </div>
                                <div class="col-auto text-end float-end ms-auto download-grp">
                                    <a href="javascript:;" class=" me-2">
                                        <i class="bi bi-file-earmark-pdf"></i>
                                    </a>
                                    <a href="javascript:;" class=" me-2">
                                        <i class="bi bi-file-earmark-excel"></i>
                                    </a>
                                </div>
                            </div>
                        </div>

                        <div class="table-responsive">
                            <table class="table border-0 custom-table comman-table datatable mb-0">
                                <thead>
                                    <tr>
                                        <th>Name</th>
                                        <th>Clinic Num</th>
                                        <th>Specialization</th>
                                        <th>Title</th>
                                        <th>Introduction</th>
                                        <th></th>
                                    </tr>
                                </thead>
                                <tbody>
                                    @if (doctors == null)
                                    {
                                        <div class="d-flex flex-column position-fixed justify-content-center align-items-center" style="z-index: 9999; top: 0; left: 0; bottom: 0; right: 0;">
                                            <div class="spinner-border" role="status" style="width: 5em; height: 5em;">
                                                <span class="visually-hidden">Loading...</span>
                                            </div>
                                            <h3 class="fs-5 text-center my-2">Loading...</h3>
                                        </div>
                                    }
                                    else
                                    {
                                        @foreach (var item in doctors)
                                        {
                                            <tr>
                                                <td class="profile-image">
                                                    <img width="28" height="28" src="@item.ImageUrl" class="rounded-circle m-r-5" alt>@item.Name
                                                </td>
                                                <td>@item.ClinicNum</td>
                                                <td>@item.Specialization.ConvertSpecEnum()</td>
                                                <td>@item.Title</td>
                                                <td class="description-cell"><div class="ellipsis">@item.Introduction</div></td>
                                                <RadzenMenu>
                                                    <RadzenMenuItem Text="More">
                                                        <RadzenMenuItem Click="@(_ => nav.NavigateTo($"upsert-doctor/{@item.Id}", true))" Text="Edit"></RadzenMenuItem>
                                                        <RadzenMenuItem Click="@(args => ConfirmDelete(@item.Id))" @onclick:stopPropagation="true" Text="Delete"></RadzenMenuItem>
                                                    </RadzenMenuItem>
                                                </RadzenMenu>
                                            </tr>
                                        }
                                    }

                                </tbody>
                            </table>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@code {
    FilterDto filter = new();
    List<DoctorListViewModel> doctors = new();
    string doctorName = string.Empty;
    protected override async Task OnInitializedAsync()
    {
        var response = await clinicService.GetDoctorsAsync<ResponseDto>(filter);
        if (response != null && response.IsSuccess)
        {
            doctors = JsonConvert.DeserializeObject<List<DoctorListViewModel>>(Convert.ToString((response.Result)));
        }
    }
    public async Task ConfirmDelete(string id)
    {
        var confirmationResult = await this.DialogService.Confirm("Are you sure?", "Delete Box", new ConfirmOptions { OkButtonText = "Yes", CancelButtonText = "No" });
        if (confirmationResult == true)
        {
            var responseDelete = await doctorService.DeleteDoctor<ResponseDto>(id);
            if (responseDelete != null && responseDelete.IsSuccess)
            {
                doctors = null;
                StateHasChanged();
                var response = await clinicService.GetDoctorsAsync<ResponseDto>(filter);
                if (response != null && response.IsSuccess)
                {
                    doctors = JsonConvert.DeserializeObject<List<DoctorListViewModel>>(Convert.ToString((response.Result)));
                    StateHasChanged();
                }
                NotificationService.Notify(new NotificationMessage { Severity = NotificationSeverity.Error, Summary = "Delete Successfully" });
            }
        }
    }
    private async Task HandleChange(ChangeEventArgs e)
    {
        doctorName = e?.Value?.ToString();
        filter.DoctorName = doctorName;
        doctors = null;
        StateHasChanged();
        var response = await clinicService.GetDoctorsAsync<ResponseDto>(filter);
        if (response != null && response.IsSuccess)
        {
            doctors = JsonConvert.DeserializeObject<List<DoctorListViewModel>>(Convert.ToString((response.Result)));
            StateHasChanged();
        }
    }
    void AddDoctor()
    {
        nav.NavigateTo("/upsert-doctor", true);
    }
}
<style>

    td.description-cell {
        max-width: 15em;
    }

    div.ellipsis {
        white-space: nowrap;
        overflow: hidden;
        text-overflow: ellipsis;
    }
</style>