@page "/list-coupon"
@layout AdminLayout
@using Clinic.Data.Models
@using Clinic.BlazorWebPWA.Extensions
@inject ICouponService couponService
@inject NavigationManager nav
@inject DialogService DialogService
@inject NotificationService NotificationService
<PageTitle>List of Coupons</PageTitle>

<link href="css/admin.css" rel="stylesheet" />

<div class="page-wrapper">
    <div class="content">

        <div class="page-header">
            <div class="row">
                <div class="col-sm-12">
                    <ul class="breadcrumb">
                        <li class="breadcrumb-item"><a href="list-product">Coupons </a></li>
                        <li class="breadcrumb-item"><i class="fa-solid fa-chevron-right"></i></li>
                        <li class="breadcrumb-item active">List of Coupons</li>
                    </ul>
                </div>
            </div>
        </div>

        <div class="row">
            <div class="col-sm-12">
                <div class="card card-table show-entire">
                    <div class="card-body">

                        <div class="page-table-header mb-2">
                            <div class="row align-items-center">
                                <div class="col">
                                    <div class="doctor-table-blk">
                                        <h3>Coupons List</h3>
                                        <div class="doctor-search-blk">
                                            <div class="top-nav-search table-search-blk">
                                                    <input type="text" value="@couponName" @onchange="HandleChange" class="form-control" placeholder="Search here">
                                            </div>
                                            <div class="add-group">
                                                <RadzenButton Click=@(_ => nav.NavigateTo($"upsert-coupon", true)) Style="margin-left: 20px" Icon="add_circle_outline" ButtonStyle="ButtonStyle.Secondary" />
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>

                        <div class="table-responsive">
                            <table class="table border-0 custom-table comman-table datatable mb-0">
                                <thead>
                                    <tr>
                                        <th>Code</th>
                                        <th>DiscountAmount</th>
                                        <th>IsEnable</th>
                                        <th></th>
                                    </tr>
                                </thead>
                                <tbody>
                                    @if(GetListCoupons is not null)
                                    {
                                        @foreach (var item in GetListCoupons)
                                        {
                                            <tr>
                                                <td>@item.CouponCode</td>
                                                <td>@item.DiscountAmount</td>
                                                <td>@item.IsEnable</td>
                                                <RadzenMenu>
                                                <RadzenMenuItem Text="More">
                                                    <RadzenMenuItem Click="@(_ => nav.NavigateTo($"upsert-coupon/{@item.Id}", true))" Text="Edit"></RadzenMenuItem>
                                                    <RadzenMenuItem Click="@(args => ConfirmDelete(@item.Id))" @onclick:stopPropagation="true" Text="Delete"></RadzenMenuItem>
                                                </RadzenMenuItem>
                                                </RadzenMenu>
                                            </tr>
                                        }
                                    }                                   
                                </tbody>
                            </table>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
@code{
    private List<Coupon> GetListCoupons = new();
    string couponName = string.Empty;
    protected override async Task OnInitializedAsync(){

        var response = await couponService.GetListCoupons<ResponseDto>(string.Empty);
        if (response != null && response.IsSuccess)
        {
            GetListCoupons = JsonConvert.DeserializeObject<List<Coupon>>(Convert.ToString((response.Result)));
            StateHasChanged();
        }
    }

    public async Task ConfirmDelete(string id)
    {
        var confirmationResult = await this.DialogService.Confirm("Are you sure?", "Delete Box", new ConfirmOptions { OkButtonText = "Yes", CancelButtonText = "No" });
        if (confirmationResult == true)
        {
            var responseDelete = await couponService.DeleteCoupon<ResponseDto>(id);
            if (responseDelete != null && responseDelete.IsSuccess)
            {
                GetListCoupons = null;
               StateHasChanged();
                var response =  await couponService.GetListCoupons<ResponseDto>(string.Empty);
                if (response != null && response.IsSuccess)
                {
                    GetListCoupons = JsonConvert.DeserializeObject<List<Coupon>>(Convert.ToString((response.Result)));
                    StateHasChanged();
                }
                NotificationService.Notify(new NotificationMessage { Severity = NotificationSeverity.Error, Summary = "Delete Successfully"});
            }
        }
    }
    private async Task HandleChange(ChangeEventArgs e)
    {
        couponName = e?.Value?.ToString();
        GetListCoupons = null;
        StateHasChanged();
        var response =  await couponService.GetListCoupons<ResponseDto>(string.Empty);
        if (response != null && response.IsSuccess)
        {
            GetListCoupons = JsonConvert.DeserializeObject<List<Coupon>>(Convert.ToString((response.Result)));
            GetListCoupons = GetListCoupons.Where(x => x.CouponCode.ContainsCaseInsensitive(couponName)).ToList();
            StateHasChanged();
        }
    }
    void AddProduct()
    {
        nav.NavigateTo("/upsert-product",true);
    }
}