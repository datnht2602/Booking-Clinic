@page "/admin"
@using Clinic.BlazorWebPWA.Extensions
@inject IClinicService clinicService
@inject IBookingService bookingService
@inject NavigationManager nav
@inject DialogService DialogService
@layout AdminLayout

<PageTitle>Admin</PageTitle>


<div class="page-wrapper">
    <div class="content">
        
        <div class="good-morning-blk">
            <div class="row">
                <div class="col-md-6">
                    <div class="morning-user">
                        <h2>Good Morning, <span>Admin</span></h2>
                        <p>Have a nice day at work</p>
                    </div>
                </div>
                <div class="col-md-6 position-blk">
                    <div class="morning-img">
                        <img src="img/morning-img-01.png" alt>
                    </div>
                </div>
            </div>
        </div>
        <div class="row">
            <div class="col-md-6 col-sm-6 col-lg-6 col-xl-3">
                <div class="dash-widget">
                    <div class="dash-boxs comman-flex-center">
                        <i class="fa-regular fa-calendar-check"></i>
                    </div>
                    <div class="dash-content dash-count">
                        <h4>Appointments This Month</h4>
                        <h2>
                            <span class="counter-up">@nowAppointments</span>
                        </h2>
                    </div>
                </div>
            </div>
            <div class="col-md-6 col-sm-6 col-lg-6 col-xl-3">
                <div class="dash-widget">
                    <div class="dash-boxs comman-flex-center">
                        <i class="fa-solid fa-bed-pulse"></i>
                    </div>
                    <div class="dash-content dash-count">
                        <h4>New Patients This Month</h4>
                        <h2>
                            <span class="counter-up">@newPatients</span>
                        </h2>
                    </div>
                </div>
            </div>
            <div class="col-md-6 col-sm-6 col-lg-6 col-xl-3">
                <div class="dash-widget">
                    <div class="dash-boxs comman-flex-center">
                        <i class="fa-solid fa-hospital"></i>
                    </div>
                    <div class="dash-content dash-count">
                        <h4>Applied Discount This Month</h4>
                        <h2>
                            <span class="counter-up">@applieDiscount</span>
                        </h2>
                    </div>
                </div>
            </div>
            <div class="col-md-6 col-sm-6 col-lg-6 col-xl-3">
                <div class="dash-widget">
                    <div class="dash-boxs comman-flex-center">
                        <i class="fa-solid fa-wallet"></i>
                    </div>
                    <div class="dash-content dash-count">
                        <h4>Earnings This Month</h4>
                        <h2><span class="counter-up"> @nowEarning.ToString("C")</span></h2>
                    </div>
                </div>
            </div>
        </div>
        <div class="row">
            <div class="col-12 col-md-12 col-lg-6 col-xl-9">
                <div class="card">
                    <div class="card-body">
                        <div class="chart-title patient-visit">
                            <h4>Patient Visit by Gender</h4>
                            <div>
                                <ul class="nav chat-user-total">
                                    @if (GetPercentageGender.Count > 0)
                                    {
                                        @foreach (var item in GetPercentageGender)
                                        {
                                            <li><i class="fa fa-circle current-users" aria-hidden="true"></i>@(item.Key == 1 ? "Male" : "Female") @item.Value.ToString("F2")%</li>
                                        }
                                    }
                                </ul>
                            </div>
                        </div>
                        <div id="patient-chart"></div>
                    </div>
                </div>
            </div>
        </div>
        <div class="row">
            <div class="col-12 col-md-12  col-xl-4">
                <div class="card top-departments">
                    <div class="card-header">
                        <h4 class="card-title mb-0">Top Departments</h4>
                    </div>
                    <div class="card-body">
                        @if (GetPercentageService.Count > 0)
                        {
                            @foreach (var item in GetPercentageService)
                            {
                                <div class="activity-top">
                                    <div class="activity-boxs comman-flex-center">
                                        <i class="fa-solid fa-stethoscope"></i>
                                    </div>
                                    <div class="departments-list">
                                        <h4>@item.Key.ConvertSpecEnum()</h4>
                                        <p>@item.Value.ToString("F0")%</p>
                                    </div>
                                </div>
                            }
                        }
                    </div>
                </div>
            </div>
            <div class="col-12 col-md-12  col-xl-8">
                <div class="card">
                    <div class="card-header">
                        <h4 class="card-title d-inline-block">Upcoming Appointments</h4>
                    </div>
                    <div class="card-body p-0 table-dash">
                        <div class="table-responsive">
                            <table class="table mb-0 border-0 datatable custom-table">
                                <thead>
                                    <tr>
                                        <th>No</th>
                                        <th>Patient name</th>
                                        <th>Doctor</th>
                                        <th>Time</th>
                                        <th>Disease</th>
                                        <th></th>
                                    </tr>
                                </thead>
                                <tbody>
                                    @if (recentBookings != null)
                                    {
                                        @foreach (var item in recentBookings)
                                        {
                                            <tr>
                                                <td>@item.Id</td>
                                                <td>@item.BriefViewModel.UserName</td>
                                                <td class="table-image appoint-doctor">
                                                    <img width="28" height="28" class="rounded-circle" src="@item.ImageUrl" alt>
                                                    <h2>@item.DoctorName</h2>
                                                </td>
                                                <td class="appoint-time">@item.OrderPlacedDate.GetDateTime()</td>
                                                <td>
                                                    <button class="custom-badge status-green ">@item.Specialization.ConvertSpecEnum()</button>
                                                </td>
                                            </tr>
                                        }
                                    }
                                </tbody>
                            </table>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div class="row">
            <div class="col-12 col-xl-12">
                <div class="card">
                    <div class="card-header pb-0">
                        <h4 class="card-title d-inline-block">Recent Patients </h4>
                        </div>
                    <div class="card-block table-dash">
                        <div class="table-responsive">
                            <table class="table mb-0 border-0 datatable custom-table">
                                <thead>
                                    <tr>
                                        <th>Patient name</th>
                                        <th>Gender</th>
                                        <th>Date of Birth</th>
                                        <th>Email</th>
                                        <th>Phone Number</th>
                                        <th></th>
                                    </tr>
                                </thead>
                                <tbody>
                                    @if (recentPatients != null)
                                    {
                                        @foreach (var item in recentPatients)
                                        {
                                            <tr>
                                                <td class="table-image">
                                                    <h2>@item.BriefViewModel.UserName</h2>
                                                </td>
                                                <td>@(item.BriefViewModel.Sexual == 1 ? "Male" : "Female")</td>
                                                <td>@item.BriefViewModel.DateOfBirth</td>
                                                <td>@item.BriefViewModel.Email</td>
                                                <td>@item.BriefViewModel.PhoneNumber</td>
                                            </tr>
                                        }
                                    }
                                </tbody>
                            </table>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@code {
    [Inject] IAccessTokenProvider TokenProvider { get; set; }
    [CascadingParameter] private Task<AuthenticationState> authenticationStateTask { get; set; }
    private string accessToken { get; set; }
    List<BookingDetailsViewModel> list = new();
    List<BookingDetailsViewModel> recentBookings = new();
    List<BookingDetailsViewModel> recentPatients = new();
    Dictionary<int, double> GetPercentageService = new();
    Dictionary<int, double> GetPercentageGender = new();
    int nowAppointments;
    int newPatients;
    double nowEarning;
    double applieDiscount;
    protected async override Task OnInitializedAsync()
    {
        base.OnInitialized();

        var authState = await authenticationStateTask;
        var user = authState.User;
        if (!user.Identity.IsAuthenticated)
        {
            nav.NavigateTo("authentication/login");
        }

        var accessTokenResult = await TokenProvider.RequestAccessToken();
        accessToken = string.Empty;

        if (accessTokenResult.TryGetToken(out var token))
        {
            accessToken = token.Value;
        }

        DateTime today = DateTime.Now;
        ;
        DateTime firstDayOfMonth = new DateTime(today.Year, today.Month, 1);

        var lastMonth = firstDayOfMonth.AddMonths(-1).Ticks;
        var response = await bookingService.GetListBookings<ResponseDto>($" e.OrderStatus= '{OrderStatus.Submitted}' and e.OrderPlacedDate > {lastMonth} ");
        if (response != null && response.IsSuccess)
        {
            list = JsonConvert.DeserializeObject<List<BookingDetailsViewModel>>(Convert.ToString((response.Result)));
            recentBookings = list?.Where(x => x.OrderPlacedDate > DateTime.Now.Ticks).OrderBy(x => x.OrderPlacedDate).Take(5).ToList();
            recentPatients = list?.Where(x => x.OrderPlacedDate < DateTime.Now.Ticks && x.OrderPlacedDate > DateTime.Now.AddDays(-7).Ticks).OrderByDescending(x => x.OrderPlacedDate).Take(5).ToList();
            var dictionary = list.GroupBy(x => x.Specialization)
                .ToDictionary(group => group.Key, group => (double)group.Count() / list.Count * 100);
            GetPercentageService = dictionary.OrderByDescending(item => item.Value).Take(5).ToDictionary(item => item.Key, item => item.Value);
            GetPercentageGender = list.GroupBy(x => x.BriefViewModel.Sexual)
                .ToDictionary(group => group.Key, group => (double)group.Count() / list.Count * 100);
            nowAppointments = list.Where(x => x.OrderPlacedDate >= firstDayOfMonth.Ticks).Count();
            nowEarning = list.Where(x => x.OrderPlacedDate >= firstDayOfMonth.Ticks).Sum(x => x.OrderTotal);
            applieDiscount = list.Where(x => x.OrderPlacedDate >= firstDayOfMonth.Ticks && x.DiscountTotal != 0).Count();
            newPatients = await clinicService.GetListUser<int>(accessToken);
            StateHasChanged();
        }
    }

}